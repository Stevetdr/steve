#include <LedControl.h>
#include <stdio.h>
#include <stdlib.h>

// inputs: DIN pin, CLK pin, LOAD pin, number of chips 7219 attached
//     pin  5        6         7        x     arduino pin
LedControl lc = LedControl(5, 6, 7, 3);

unsigned long delaytime=350; /* we always wait a bit between updates of the display */
unsigned long delaytime1=10;

char a ;	//definizioni generiche
int ia = 0 ;	//definizioni generiche 
 
int SSarray[] = {B00000000,                       // matrice 0 init
  B00011000,B00100100,B01000010,B01000010,B01000010,B01000010,B00100100,B00011000,	// eye1 127
  B00011000,B00111100,B01011010,B01000010,B01000010,B01000010,B00100100,B00011000,	// eye2 128 
  B00011000,B00100100,B01011010,B01011010,B01000010,B01000010,B00100100,B00011000,	// eye3 129  
  B00011000,B00100100,B01000010,B01011010,B01011010,B01000010,B00100100,B00011000,	// eye4 130 
  B00011000,B00100100,B01000010,B01000010,B01011010,B01011010,B00100100,B00011000,	// eye5 131  
  B00011000,B00100100,B01000010,B01000010,B01000010,B01011010,B00111100,B00011000, 	// eye6 132
  B00011000,B00010000,B00010000,B00010000,B00010000,B00010000,B00010000,B00011000,	// eye7 133

  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,     // space 32
  B00000000,B01011111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,     // !   33
  B00000000,B00000011,B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,     // "
  B00000000,B00010100,B00111110,B00010100,B00111110,B00010100,B00000000,B00000000,     // #
  B00000000,B00100100,B01101010,B00101011,B00010010,B00000000,B00000000,B00000000,     // $
  B00000000,B01100011,B00010011,B00001000,B01100100,B01100011,B00000000,B00000000,     // %
  B00000000,B00110110,B01001001,B01010110,B00100000,B01010000,B00000000,B00000000,     // &
  B00000000,B00000011,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,     // '
  B00000000,B00011100,B00100010,B01000001,B00000000,B00000000,B00000000,B00000000,     // (
  B00000000,B01000001,B00100010,B00011100,B00000000,B00000000,B00000000,B00000000,     // )
  B00000000,B00101000,B00011000,B00001110,B00011000,B00101000,B00000000,B00000000,     // *
  B00000000,B00001000,B00001000,B00111110,B00001000,B00001000,B00000000,B00000000,     // +
  B00000000,B10110000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,     // ,
  B00000000,B00001000,B00001000,B00001000,B00001000,B00000000,B00000000,B00000000,     // -
  B00000000,B01100000,B01100000,B00000000,B00000000,B00000000,B00000000,B00000000,     // .
  B00000000,B01100000,B00011000,B00000110,B00000001,B00000000,B00000000,B00000000,     // /
  B00000000,B00111110,B01000001,B01000001,B00111110,B00000000,B00000000,B00000000,     // 0
  B00000000,B01000010,B01111111,B01000000,B00000000,B00000000,B00000000,B00000000,     // 1
  B00000000,B01100010,B01010001,B01001001,B01000110,B00000000,B00000000,B00000000,     // 2
  B00000000,B00100010,B01000001,B01001001,B00110110,B00000000,B00000000,B00000000,     // 3
  B00000000,B00011000,B00010100,B00010010,B01111111,B00000000,B00000000,B00000000,     // 4
  B00000000,B00100111,B01000101,B01000101,B00111001,B00000000,B00000000,B00000000,     // 5
  B00000000,B00111110,B01001001,B01001001,B00110000,B00000000,B00000000,B00000000,     // 6
  B00000000,B01100001,B00010001,B00001001,B00000111,B00000000,B00000000,B00000000,     // 7
  B00000000,B00110110,B01001001,B01001001,B00110110,B00000000,B00000000,B00000000,     // 8
  B00000000,B00000110,B01001001,B01001001,B00111110,B00000000,B00000000,B00000000,     // 9
  B00000000,B01010000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,     // :
  B00000000,B10000000,B01010000,B00000000,B00000000,B00000000,B00000000,B00000000,     // ;
  B00000000,B00010000,B00101000,B01000100,B00000000,B00000000,B00000000,B00000000,     // <
  B00000000,B00010100,B00010100,B00010100,B00000000,B00000000,B00000000,B00000000,     // =
  B00000000,B01000100,B00101000,B00010000,B00000000,B00000000,B00000000,B00000000,     // >
  B00000000,B00000010,B01011001,B00001001,B00000110,B00000000,B00000000,B00000000,     // ?
  B00000000,B00111110,B01001001,B01010101,B01011101,B00001110,B00000000,B00000000,     // @
  B00000000,B01111110,B00010001,B00010001,B01111110,B00000000,B00000000,B00000000,     // A
  B00000000,B01111111,B01001001,B01001001,B00110110,B00000000,B00000000,B00000000,     // B
  B00000000,B00111110,B01000001,B01000001,B00100010,B00000000,B00000000,B00000000,     // C
  B00000000,B01111111,B01000001,B01000001,B00111110,B00000000,B00000000,B00000000,     // D
  B00000000,B01111111,B01001001,B01001001,B01000001,B00000000,B00000000,B00000000,     // E
  B00000000,B01111111,B00001001,B00001001,B00000001,B00000000,B00000000,B00000000,     // F
  B00000000,B00111110,B01000001,B01001001,B01111010,B00000000,B00000000,B00000000,     // G
  B00000000,B01111111,B00001000,B00001000,B01111111,B00000000,B00000000,B00000000,     // H
  B00000000,B01000001,B01111111,B01000001,B00000000,B00000000,B00000000,B00000000,     // I
  B00000000,B00110000,B01000000,B01000001,B00111111,B00000000,B00000000,B00000000,     // J
  B00000000,B01111111,B00001000,B00010100,B01100011,B00000000,B00000000,B00000000,     // K
  B00000000,B01111111,B01000000,B01000000,B01000000,B00000000,B00000000,B00000000,     // L
  B00000000,B01111111,B00000010,B00001100,B00000010,B01111111,B00000000,B00000000,     // M
  B00000000,B01111111,B00000100,B00001000,B00010000,B01111111,B00000000,B00000000,     // N
  B00000000,B00111110,B01000001,B01000001,B00111110,B00000000,B00000000,B00000000,     // O
  B00000000,B01111111,B00001001,B00001001,B00000110,B00000000,B00000000,B00000000,     // P
  B00000000,B00111110,B01000001,B01000001,B10111110,B00000000,B00000000,B00000000,     // Q
  B00000000,B01111111,B00001001,B00001001,B01110110,B00000000,B00000000,B00000000,     // R
  B00000000,B01000110,B01001001,B01001001,B00110010,B00000000,B00000000,B00000000,     // S
  B00000000,B00000001,B00000001,B01111111,B00000001,B00000001,B00000000,B00000000,     // T
  B00000000,B00111111,B01000000,B01000000,B00111111,B00000000,B00000000,B00000000,     // U
  B00000000,B00001111,B00110000,B01000000,B00110000,B00001111,B00000000,B00000000,     // V
  B00000000,B00111111,B01000000,B00111000,B01000000,B00111111,B00000000,B00000000,     // W
  B00000000,B01100011,B00010100,B00001000,B00010100,B01100011,B00000000,B00000000,     // X
  B00000000,B00000111,B00001000,B01110000,B00001000,B00000111,B00000000,B00000000,     // Y
  B00000000,B01100001,B01010001,B01001001,B01000111,B00000000,B00000000,B00000000,     // Z
  B00000000,B01111111,B01000001,B00000000,B00000000,B00000000,B00000000,B00000000,     // [
  B00000000,B00000001,B00000110,B00011000,B01100000,B00000000,B00000000,B00000000,     // \ backslash
  B00000000,B01000001,B01111111,B00000000,B00000000,B00000000,B00000000,B00000000,     // ]
  B00000000,B00000010,B00000001,B00000010,B00000000,B00000000,B00000000,B00000000,     // hat
  B00000000,B01000000,B01000000,B01000000,B01000000,B00000000,B00000000,B00000000,     // _
  B00000000,B00000001,B00000010,B00000000,B00000000,B00000000,B00000000,B00000000,     // `
  B00000000,B00100000,B01010100,B01010100,B01111000,B00000000,B00000000,B00000000,     // a
  B00000000,B01111111,B01000100,B01000100,B00111000,B00000000,B00000000,B00000000,     // b
  B00000000,B00111000,B01000100,B01000100,B00101000,B00000000,B00000000,B00000000,     // c
  B00000000,B00111000,B01000100,B01000100,B01111111,B00000000,B00000000,B00000000,     // d
  B00000000,B00111000,B01010100,B01010100,B00011000,B00000000,B00000000,B00000000,     // e
  B00000000,B00000100,B01111110,B00000101,B00000000,B00000000,B00000000,B00000000,     // f
  B00000000,B10011000,B10100100,B10100100,B01111000,B00000000,B00000000,B00000000,     // g
  B00000000,B01111111,B00000100,B00000100,B01111000,B00000000,B00000000,B00000000,     // h
  B00000000,B01000100,B01111101,B01000000,B00000000,B00000000,B00000000,B00000000,     // i
  B00000000,B01000000,B10000000,B10000100,B01111101,B00000000,B00000000,B00000000,     // j
  B00000000,B01111111,B00010000,B00101000,B01000100,B00000000,B00000000,B00000000,     // k
  B00000000,B01000001,B01111111,B01000000,B00000000,B00000000,B00000000,B00000000,     // l
  B00000000,B01111100,B00000100,B01111100,B00000100,B01111000,B00000000,B00000000,     // m
  B00000000,B01111100,B00000100,B00000100,B01111000,B00000000,B00000000,B00000000,     // n
  B00000000,B00111000,B01000100,B01000100,B00111000,B00000000,B00000000,B00000000,     // o
  B00000000,B11111100,B00100100,B00100100,B00011000,B00000000,B00000000,B00000000,     // p
  B00000000,B00011000,B00100100,B00100100,B11111100,B00000000,B00000000,B00000000,     // q
  B00000000,B01111100,B00001000,B00000100,B00000100,B00000000,B00000000,B00000000,     // r
  B00000000,B01001000,B01010100,B01010100,B00100100,B00000000,B00000000,B00000000,     // s
  B00000000,B00000100,B00111111,B01000100,B00000000,B00000000,B00000000,B00000000,     // t
  B00000000,B00111100,B01000000,B01000000,B01111100,B00000000,B00000000,B00000000,     // u
  B00000000,B00011100,B00100000,B01000000,B00100000,B00011100,B00000000,B00000000,     // v
  B00000000,B00111100,B01000000,B00111100,B01000000,B00111100,B00000000,B00000000,     // w
  B00000000,B01000100,B00101000,B00010000,B00101000,B01000100,B00000000,B00000000,     // x
  B00000000,B10011100,B10100000,B10100000,B01111100,B00000000,B00000000,B00000000,     // y
  B00000000,B01100100,B01010100,B01001100,B00000000,B00000000,B00000000,B00000000,     // z
  B00000000,B00001000,B00110110,B01000001,B00000000,B00000000,B00000000,B00000000,     // {
  B00000000,B01111111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,     // |
  B00000000,B01000001,B00110110,B00001000,B00000000,B00000000,B00000000,B00000000,     // }
  B00000000,B00001000,B00000100,B00001000,B00000100,B00000000,B00000000,B00000000/*,     // ~ 126
  B00011000,B00100100,B01000010,B01000010,B01000010,B01000010,B00100100,B00011000,	// eye1 127
  B00011000,B00111100,B01011010,B01000010,B01000010,B01000010,B00100100,B00011000,	// eye2 128 
  B00011000,B00100100,B01011010,B01011010,B01000010,B01000010,B00100100,B00011000,	// eye3 129  
  B00011000,B00100100,B01000010,B01011010,B01011010,B01000010,B00100100,B00011000,	// eye4 130 
  B00011000,B00100100,B01000010,B01000010,B01011010,B01011010,B00100100,B00011000,	// eye5 131  
  B00011000,B00100100,B01000010,B01000010,B01000010,B01011010,B00111100,B00011000 	// eye6 132*/           
};



void setup() { 

  Serial.begin(9600);	

  lc.shutdown(0,false); // The MAX72XX is in power-saving mode on startup,we have to do a wakeup call
  lc.setIntensity(0,1); // Set the brightness to a medium values
  lc.clearDisplay(0);   // and clear the display

  lc.shutdown(1,false); // The MAX72XX is in power-saving mode on startup,we have to do a wakeup call
  lc.setIntensity(1,1); // Set the brightness to a medium values
  lc.clearDisplay(1);   // and clear the display

  lc.shutdown(2,false); // The MAX72XX is in power-saving mode on startup,we have to do a wakeup call
  lc.setIntensity(2,1); // Set the brightness to a medium values
  lc.clearDisplay(2);   // and clear the display

}
	
void Work1() { 

	for(int start=0; start <7; start++) {
		ia = start * 8 +1;

 		for(int cols=0; cols <8; cols++)
			{ lc.setRow(0,cols,SSarray[ia+cols]);		     //Serial.print(start); Serial.print("  "); Serial.print(ia); Serial.print("  "); Serial.println(start); }
        	  lc.setRow(2,cols,SSarray[ia+cols]); }
        Serial.print(start); Serial.print("  ");Serial.print(ia);Serial.println(" su ");
		delay(delaytime);}

	for(int start=7; start >0; start--) {
		ia = start * 8 +1;

 		for(int cols=0; cols <8; cols++)
			{ lc.setRow(0,cols,SSarray[ia+cols]);			  //Serial.print(start); Serial.print("  "); Serial.print(ia); Serial.print("  "); Serial.println(start); }
        	  lc.setRow(2,cols,SSarray[ia+cols]); }
        Serial.print(start); Serial.print("  ");Serial.println(ia);Serial.println(" giu ");       	  
		delay(delaytime);}

}


/*void Work() { 

	for(int start=0; start <94; start++) {
		ia = start * 8;

 		for(int cols=0; cols <8; cols++)
			{ lc.setRow(0,cols,SSarray[ia+cols]);			//lc.setRow(1,leds,SSarray[ia+leds+8]);      //Serial.print(start); Serial.print("  "); Serial.print(ia); Serial.print("  "); Serial.println(start); }
        	  lc.setRow(1,cols,SSarray[ia+cols+8]); 
        	  lc.setRow(2,cols,SSarray[ia+cols+16]);         	  
    		}
	delay(delaytime);
  }
}
*/

/*
  This function lights up a some Leds in a row.
 The pattern will be repeated on every row.
 The pattern will blink along with the row-number.
 row number 4 (index==3) will blink 4 times etc.
 */

/*
void rows() {
  for(int row=0;row<8;row++) {
    delay(delaytime1);
    lc.setRow(0,row,B10000001);
    delay(delaytime1);
    lc.setRow(0,row,(byte)0);
    for(int i=0;i<row;i++) {
      delay(delaytime1);
      lc.setRow(0,row,B10000001);
      delay(delaytime1);
      lc.setRow(0,row,(byte)0);
    }
  }
}

*/

/*
  This function lights up a some Leds in a column.
 The pattern will be repeated on every column.
 The pattern will blink along with the column-number.
 column number 4 (index==3) will blink 4 times etc.
 */
/*
void columns() {
  for(int col=0;col<8;col++) {
    delay(delaytime1);
    lc.setColumn(0,col,B10000001);
    delay(delaytime1);
    lc.setColumn(0,col,(byte)0);
    for(int i=0;i<col;i++) {
      delay(delaytime1);
      lc.setColumn(0,col,B10000001);
      delay(delaytime1);
      lc.setColumn(0,col,(byte)0);
    }
  }
}


*/

void loop() { 
	Work1();
}